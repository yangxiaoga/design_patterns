package com.ethan.design.patterns.creater.singleton;

/**
 * @author Administrator
 * 1、核心作用
 * 保证一个类只有一个实例，并且提供一个访问该实例的全局访问点
 * -------------------------------------------
 * 2、什么用的单例模式?
 * 应用程序的日志,数据库连接池,Spring中bean默认单例
 * Spring MVC框架/struts1框架中，控制器对象也是单例的
 * 每个Servlet也是单例的
 * 读取配置文件的类
 * ---------------------------------------------
 * 3、常见的五种单例模式的实现方式
 * 3.1 饿懒汉式(线程安全，调用效率高，但是不能延时加载)
 * 3.2 懒汉式(线程安全，调用效率不高，但是可以延时加载)
 * 3.3 双重检测锁式(由于虚拟机内部模型原因，偶尔出问题)
 * 由于虚拟机内部优化的问题，可能会出问题
 * 但在J2SE5.0中已经被修复，可以用volatile关键字保证多线程下的单例
 * 3.4 静态内部类式(线程安全，调用效率高，但是可以延时加载)
 * 3.5 枚举单例(线程安全，调用效率高，不能延时加载)
 */
public class Singleton {

}
